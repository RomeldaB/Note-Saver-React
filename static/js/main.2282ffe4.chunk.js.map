{"version":3,"sources":["firebase/index.js","components/Navbar.js","store/actions.js","components/Note.js","components/AddUpdateNote.js","pages/Home.js","components/Form.js","pages/Authentication.js","App.js","serviceWorker.js","store/index.js","store/reducers/notes.js","store/reducers/authentication.js","store/reducers/firebase.js","index.js"],"names":["firebase","app","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","database","Navbar","className","onClick","e","preventDefault","console","log","signOut","setUid","uid","type","addNote","id","data","deleteNote","updateNote","changes","firebaseEvents","dispatch","a","ref","on","snapshot","key","note","val","Note","openEditPopup","useDispatch","useSelector","store","style","backgroundColor","color","title","description","remove","err","firebaseDelete","AddUpdateNote","props","noteToEdit","useState","noteTitle","setNoteTitle","noteDescription","setNoteDescription","noteColor","setNoteColor","errorMessage","setErrorMessage","handleCancel","handleEditCancel","handleAddCancel","value","onChange","target","rows","cols","noteData","update","firebaseUpdate","newId","v4","set","firebaseAdd","Home","setNoteToEdit","showAdd","setShowAdd","showEdit","setShowEdit","search","setSearch","loggedIn","authentication","notes","filter","toLowerCase","includes","closeAddPopUp","closeEditPopUp","handleAsync","waitForCurrentUser","setInterval","currentUser","clearInterval","useEffect","to","placeholder","length","map","register","header","message","comp","login","withRouter","page","history","email","setEmail","password","setPassword","createUserWithEmailAndPassword","then","push","catch","error","signInWithEmailAndPassword","Authentication","App","onAuthStateChanged","user","path","exact","Boolean","window","location","hostname","match","combineReducers","state","action","arrayOfIds","Object","assign","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2282ffe4.chunk.js","sourcesContent":["import * as app from \"firebase/app\";\n\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nlet firebaseConfig = {\n  apiKey: \"AIzaSyAJ9GWxW8Pmlcl1tQYbCZbQuxI0kBo-MTk\",\n  authDomain: \"note-saver-a0cc7.firebaseapp.com\",\n  databaseURL: \"https://note-saver-a0cc7.firebaseio.com\",\n  projectId: \"note-saver-a0cc7\",\n  storageBucket: \"note-saver-a0cc7.appspot.com\",\n  messagingSenderId: \"218369868232\",\n  appId: \"1:218369868232:web:274d0987e0bd325a9a40fd\",\n};\n// Initialize Firebase\nexport const firebase = app.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const db = firebase.database();\n","import React from \"react\";\nimport { auth } from \"../firebase\";\n\nexport default function Navbar() {\n  const logout = (e) => {\n    e.preventDefault();\n    console.log(\"Signing out\");\n    auth.signOut();\n  };\n\n  return (\n    <nav>\n      <div className=\"nav-brand\">\n        <h1>MyNotes</h1>\n      </div>\n      <div onClick={logout} className=\"nav-link\">\n        <button>Log out</button>\n        <i className=\"fas fa-user-minus\"></i>\n      </div>\n    </nav>\n  );\n}\n","import { db } from \"../firebase\";\nimport { v4 } from \"uuid\";\n\nexport const ADD_NOTE = \"addNote\";\nexport const DEL_NOTE = \"delNote\";\nexport const UPDATE_NOTE = \"updateNote\";\nexport const LOG_IN = \"logIn\";\nexport const LOG_OUT = \"logOut\";\nexport const SET_UID = \"setUid\";\n\nexport const setUid = (uid) => {\n  return {\n    type: SET_UID,\n    uid,\n  };\n};\n\nexport const addNote = (id, data) => {\n  return {\n    type: ADD_NOTE,\n    data,\n    id,\n  };\n};\n\nexport const deleteNote = (id) => {\n  return {\n    type: DEL_NOTE,\n    id,\n  };\n};\n\nexport const updateNote = (id, changes) => {\n  return {\n    type: UPDATE_NOTE,\n    id,\n    changes,\n  };\n};\n\nexport const logIn = () => {\n  return {\n    type: LOG_IN,\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: LOG_OUT,\n  };\n};\n\nexport const firebaseEvents = (uid) => {\n  return async (dispatch) => {\n    const ref = await db.ref(\"\" + uid);\n\n    ref.on(\"child_added\", (snapshot) => {\n      const id = snapshot.key;\n      const note = snapshot.val();\n      dispatch(addNote(id, note));\n    });\n\n    ref.on(\"child_changed\", (snapshot) => {\n      const id = snapshot.key;\n      const note = snapshot.val();\n      dispatch(updateNote(id, note));\n    });\n\n    ref.on(\"child_removed\", (snapshot) => {\n      const id = snapshot.key;\n      dispatch(deleteNote(id));\n    });\n  };\n};\n\nexport const firebaseAdd = (uid, data) => {\n  return async (dispatch) => {\n    const newId = v4();\n    const ref = db.ref(\"\" + uid + \"/\" + newId);\n\n    ref.set(data, (err) => {\n      if (err) {\n        console.log(\"Error on adding firebase entry!\");\n      }\n    });\n  };\n};\n\nexport const firebaseDelete = (uid, id) => {\n  return async (dispatch) => {\n    const ref = db.ref(\"\" + uid + \"/\" + id);\n\n    ref.remove((err) => {\n      if (err) {\n        console.log(\"Error on deleting firebase entry!\");\n      }\n    });\n  };\n};\n\nexport const firebaseUpdate = (uid, id, data) => {\n  return async (dispatch) => {\n    const ref = db.ref(\"\" + uid + \"/\" + id);\n\n    ref.update(data, (err) => {\n      if (err) {\n        console.log(\"Error on updating firebase entry!\");\n      }\n    });\n  };\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { firebaseDelete } from \"../store/actions\";\n\nexport default function Note({ note, openEditPopup }) {\n  const dispatch = useDispatch();\n  const uid = useSelector((store) => store.firebase.uid);\n\n  return (\n    <div className=\"note\" style={{ backgroundColor: note.color }}>\n      <h2>{note.title}</h2>\n      <p>{note.description}</p>\n      <div className=\"buttons\">\n        <div onClick={() => openEditPopup(note)}>\n          <i className=\"fas fa-edit\"></i>\n        </div>\n        <div onClick={() => dispatch(firebaseDelete(uid, note.id))}>\n          <i className=\"fas fa-trash-alt\"></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { firebaseAdd, firebaseUpdate } from \"../store/actions\";\n\nexport default function AddUpdateNote(props) {\n  const dispatch = useDispatch();\n  const uid = useSelector((store) => store.firebase.uid);\n\n  let noteToEdit = null;\n  if (props.type === \"edit\") noteToEdit = props.note;\n\n  const [noteTitle, setNoteTitle] = useState(\n    noteToEdit ? noteToEdit.title : \"\"\n  );\n  const [noteDescription, setNoteDescription] = useState(\n    noteToEdit ? noteToEdit.description : \"\"\n  );\n  const [noteColor, setNoteColor] = useState(\n    noteToEdit ? noteToEdit.color : \"lightskyblue\"\n  );\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSave = (e) => {\n    e.preventDefault();\n\n    // Validation\n    if (noteTitle === \"\") {\n      setErrorMessage(\"Title cannot be left empty!!\");\n      return;\n    } else if (noteDescription === \"\") {\n      setErrorMessage(\"Description cannot be left empty!!\");\n      return;\n    }\n\n    const noteData = {\n      title: noteTitle,\n      description: noteDescription,\n      color: noteColor,\n    };\n\n    if (noteToEdit) {\n      dispatch(firebaseUpdate(uid, noteToEdit.id, noteData));\n    } else {\n      dispatch(firebaseAdd(uid, noteData));\n    }\n    handleCancel();\n  };\n\n  const handleCancel = () => {\n    if (noteToEdit) props.handleEditCancel();\n    else props.handleAddCancel();\n  };\n\n  return (\n    <section className=\"fixed-form-container\">\n      <form>\n        <h1>{props.type === \"edit\" ? \"Edit Note\" : \"Add Note\"}</h1>\n\n        <div className=\"inputs\">\n          <div className=\"labels\">Title</div>\n          <input\n            type=\"text\"\n            value={noteTitle}\n            onChange={(e) => setNoteTitle(e.target.value)}\n          />\n          <div className=\"labels\">Description</div>\n          <textarea\n            rows=\"5\"\n            cols=\"30\"\n            value={noteDescription}\n            onChange={(e) => setNoteDescription(e.target.value)}\n          ></textarea>\n          <div className=\"labels\">Color</div>\n          <select\n            id=\"colors\"\n            style={{ backgroundColor: noteColor }}\n            value={noteColor}\n            onChange={(e) => setNoteColor(e.target.value)}\n          >\n            <option value=\"lightskyblue\">Blue</option>\n            <option value=\"lightcoral\">Red</option>\n            <option value=\"rgb(238, 238, 112)\">Yellow</option>\n            <option value=\"lightpink\">Pink</option>\n            <option value=\"lightsalmon\">Orange</option>\n            <option value=\"lightseagreen\">Green</option>\n          </select>\n        </div>\n        {errorMessage ? <h2>{errorMessage}</h2> : \"\"}\n        <div className=\"buttons\">\n          <button id=\"cancel\" onClick={handleCancel}>\n            Cancel\n          </button>\n          <button id=\"save\" onClick={handleSave}>\n            Save\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Navbar from \"../components/Navbar\";\nimport Note from \"../components/Note\";\nimport AddUpdateNote from \"../components/AddUpdateNote\";\nimport { Redirect } from \"react-router-dom\";\nimport { firebaseEvents, setUid } from \"../store/actions\";\nimport { auth } from \"../firebase\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  const [noteToEdit, setNoteToEdit] = useState(null);\n  const [showAdd, setShowAdd] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const loggedIn = useSelector((store) => store.authentication.loggedIn);\n  const notes = useSelector((store) => {\n    if (search === \"\") return store.notes;\n    else\n      return store.notes.filter((note) =>\n        note.title.toLowerCase().includes(search.toLowerCase())\n      );\n  });\n\n  const closeAddPopUp = () => setShowAdd(false);\n  const closeEditPopUp = () => setShowEdit(false);\n  const openEditPopup = (note) => {\n    setNoteToEdit(note);\n    setShowEdit(true);\n  };\n\n  const handleAsync = async () => {\n    let waitForCurrentUser = setInterval(() => {\n      if (auth.currentUser && auth.currentUser.uid !== null) {\n        clearInterval(waitForCurrentUser);\n        let uid = auth.currentUser.uid;\n        dispatch(firebaseEvents(uid));\n        dispatch(setUid(uid));\n      }\n    }, 100);\n  };\n\n  useEffect(() => {\n    handleAsync();\n  }, []);\n\n  return (\n    <section className=\"Home\">\n      {loggedIn === false ? <Redirect to=\"/login\" /> : \"\"}\n\n      <Navbar />\n\n      {showAdd ? (\n        <AddUpdateNote\n          type=\"add\"\n          handleAddCancel={closeAddPopUp}\n          handleEditCancel={closeEditPopUp}\n        />\n      ) : null}\n\n      {showEdit ? (\n        <AddUpdateNote\n          type=\"edit\"\n          note={noteToEdit}\n          handleAddCancel={closeAddPopUp}\n          handleEditCancel={closeEditPopUp}\n        />\n      ) : null}\n\n      <div className=\"search\">\n        <i className=\"fas fa-search\"></i>\n        <input\n          type=\"text\"\n          placeholder=\"Search Note\"\n          value={search}\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n        />\n        <div className=\"plus-button-container\">\n          <button onClick={() => setShowAdd(true)}>+</button>\n        </div>\n      </div>\n      <div className=\"flex-wrapper\">\n        {notes.length ? (\n          notes.map((note) => (\n            <Note key={note.id} note={note} openEditPopup={openEditPopup} />\n          ))\n        ) : (\n          <div id=\"first-message\">\n            <h1>You haven't written any notes yet!</h1>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { auth } from \"../firebase\";\n\nconst data = {\n  register: {\n    header: \"Register\",\n    message: \"Already have an account?\",\n    comp: <Link to=\"/login\">Login</Link>,\n  },\n  login: {\n    header: \"Login\",\n    message: \"Don't have an account yet?\",\n    comp: <Link to=\"/register\">Register</Link>,\n  },\n};\n\nconst Form = ({ page, history }) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleAuth = (e) => {\n    e.preventDefault();\n    if (page === \"register\") {\n      auth\n        .createUserWithEmailAndPassword(email, password)\n        .then(() => {\n          history.push(\"/\");\n        })\n        .catch((error) => setErrorMessage(error.message));\n    } else if (page === \"login\") {\n      auth\n        .signInWithEmailAndPassword(email, password)\n        .then(() => {\n          history.push(\"/\");\n        })\n        .catch((error) => setErrorMessage(error.message));\n    }\n  };\n\n  return (\n    <form>\n      <div className=\"inputs\">\n        <h1>{data[page].header}</h1>\n        {errorMessage ? <h4>{errorMessage}</h4> : \"\"}\n        <div className=\"labels\">Email</div>\n        <input\n          type=\"email\"\n          placeholder=\"Your email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n\n        <div className=\"labels\">Password</div>\n        <input\n          type=\"password\"\n          placeholder=\"Your password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <div id=\"login-link\">\n        <button onClick={handleAuth}>Submit</button>\n      </div>\n      <div className=\"row\">\n        <p>{data[page].message}</p>\n        {data[page].comp}\n      </div>\n    </form>\n  );\n};\n\nexport default withRouter(Form);\n","import React from \"react\";\nimport Form from \"../components/Form\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default function Authentication({ page }) {\n  const loggedIn = useSelector((store) => store.authentication.loggedIn);\n\n  return (\n    <section className=\"Auth\">\n      {loggedIn !== false ? <Redirect to=\"/\" /> : \"\"}\n\n      <Form page={page} />\n    </section>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Authentication from \"./pages/Authentication\";\nimport { auth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { logIn, logOut } from \"./store/actions\";\nimport \"./App.css\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        // user is signed in\n        dispatch(logIn());\n      } else {\n        // user is logged out\n        dispatch(logOut());\n      }\n    });\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/register\" exact>\n          <Authentication page=\"register\" />\n        </Route>\n        <Route path=\"/login\" exact>\n          <Authentication page=\"login\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import NotesReducer from \"./reducers/notes\";\nimport AuthReducer from \"./reducers/authentication\";\nimport FirebaseReducer from \"./reducers/firebase\";\nimport { combineReducers } from \"redux\";\n\nexport default combineReducers({\n  notes: NotesReducer,\n  authentication: AuthReducer,\n  firebase: FirebaseReducer,\n});\n","import * as actions from \"../actions\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case actions.ADD_NOTE:\n      const arrayOfIds = state.map((note) => note.id);\n      if (!arrayOfIds.includes(action.id))\n        return [...state, { id: action.id, ...action.data }];\n      else return state;\n    case actions.DEL_NOTE:\n      return state.filter((note) => note.id !== action.id);\n    case actions.UPDATE_NOTE:\n      return state.map((note) =>\n        note.id === action.id ? Object.assign(note, action.changes) : note\n      );\n    default:\n      return state;\n  }\n};\n","import * as actions from \"../actions\";\n\nexport default (state = { loggedIn: null }, action) => {\n  switch (action.type) {\n    case actions.LOG_IN:\n      return { ...state, loggedIn: true };\n    case actions.LOG_OUT:\n      return { ...state, loggedIn: false };\n    default:\n      return state;\n  }\n};\n","import * as actions from \"../actions\";\n\nexport default (state = { uid: null }, action) => {\n  switch (action.type) {\n    case actions.SET_UID:\n      return { ...state, uid: action.uid };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducers from \"./store\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}